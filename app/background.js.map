{"version":3,"file":"background.js","sources":["src/helpers/window.js","src/env.js","src/background.js"],"sourcesContent":["// This helper remembers the size and position of your windows (and restores\r\n// them in that place after app relaunch).\r\n// Can be used for more than one window, just construct many\r\n// instances of it and give each different name.\r\n\r\nimport { app, BrowserWindow, screen } from 'electron';\r\nimport jetpack from 'fs-jetpack';\r\n\r\nexport default (name, options) => {\r\n  const userDataDir = jetpack.cwd(app.getPath('userData'));\r\n  const stateStoreFile = `window-state-${name}.json`;\r\n  const defaultSize = {\r\n    width: options.width,\r\n    height: options.height,\r\n  };\r\n  let state = {};\r\n  let win;\r\n\r\n  const restore = () => {\r\n    let restoredState = {};\r\n    try {\r\n      restoredState = userDataDir.read(stateStoreFile, 'json');\r\n    } catch (err) {\r\n      // For some reason json can't be read (might be corrupted).\r\n      // No worries, we have defaults.\r\n    }\r\n    return Object.assign({}, defaultSize, restoredState);\r\n  };\r\n\r\n  const getCurrentPosition = () => {\r\n    const position = win.getPosition();\r\n    const size = win.getSize();\r\n    return {\r\n      x: position[0],\r\n      y: position[1],\r\n      width: size[0],\r\n      height: size[1],\r\n    };\r\n  };\r\n\r\n  const windowWithinBounds = (windowState, bounds) => {\r\n    return windowState.x >= bounds.x\r\n      && windowState.y >= bounds.y\r\n      && windowState.x + windowState.width <= bounds.x + bounds.width\r\n      && windowState.y + windowState.height <= bounds.y + bounds.height;\r\n  };\r\n\r\n  const resetToDefaults = () => {\r\n    const bounds = screen.getPrimaryDisplay().bounds;\r\n    return Object.assign({}, defaultSize, {\r\n      x: (bounds.width - defaultSize.width) / 2,\r\n      y: (bounds.height - defaultSize.height) / 2,\r\n    });\r\n  };\r\n\r\n  const ensureVisibleOnSomeDisplay = (windowState) => {\r\n    const visible = screen.getAllDisplays().some((display) => {\r\n      return windowWithinBounds(windowState, display.bounds);\r\n    });\r\n    if (!visible) {\r\n      // Window is partially or fully not visible now.\r\n      // Reset it to safe defaults.\r\n      return resetToDefaults();\r\n    }\r\n    return windowState;\r\n  };\r\n\r\n  const saveState = () => {\r\n    if (!win.isMinimized() && !win.isMaximized()) {\r\n      Object.assign(state, getCurrentPosition());\r\n    }\r\n    userDataDir.write(stateStoreFile, state, { atomic: true });\r\n  };\r\n\r\n  state = ensureVisibleOnSomeDisplay(restore());\r\n\r\n  win = new BrowserWindow(Object.assign({}, options, state));\r\n\r\n  win.on('close', saveState);\r\n\r\n  return win;\r\n};\r\n","// Simple wrapper exposing environment variables to rest of the code.\r\n\r\nimport jetpack from 'fs-jetpack';\r\n\r\n// The variables have been written to `env.json` by the build process.\r\nconst env = jetpack.cwd(__dirname).read('env.json', 'json');\r\n\r\nexport default env;\r\n","// This is main process of Electron, started as first thing when your\r\n// app starts. This script is running through entire life of your application.\r\n// It doesn't have any windows which you can see on screen, but we can open\r\n// window from here.\r\n\r\nimport path from 'path';\r\nimport url from 'url';\r\nimport { app, Menu } from 'electron';\r\nimport { devMenuTemplate } from './menu/dev_menu_template';\r\nimport { editMenuTemplate } from './menu/edit_menu_template';\r\nimport createWindow from './helpers/window';\r\n\r\n// Special module holding environment variables which you declared\r\n// in config/env_xxx.json file.\r\nimport env from './env';\r\n\r\nconst setApplicationMenu = () => {\r\n  const menus = [editMenuTemplate];\r\n  if (env.name !== 'production') {\r\n    menus.push(devMenuTemplate);\r\n  }\r\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\r\n};\r\n\r\n// Save userData in separate folders for each environment.\r\n// Thanks to this you can use production and development versions of the app\r\n// on same machine like those are two separate apps.\r\nif (env.name !== 'production') {\r\n  const userDataPath = app.getPath('userData');\r\n  app.setPath('userData', `${userDataPath} (${env.name})`);\r\n}\r\n\r\napp.on('ready', () => {\r\n  //setApplicationMenu();\r\n\r\n  const mainWindow = createWindow('main', {\r\n    width: 1024,\r\n    height: 700,\r\n    icon: path.join(__dirname, 'icon/icon.ico')\r\n  });\r\n\r\n  mainWindow.loadURL(url.format({\r\n    pathname: path.join(__dirname, 'app.html'),\r\n    protocol: 'file:',\r\n    slashes: true,\r\n  }));\r\n\r\n  if (env.name === 'development') {\r\n    mainWindow.openDevTools();\r\n  }\r\n});\r\n\r\napp.on('window-all-closed', () => {\r\n  app.quit();\r\n});\r\n"],"names":["app","screen","BrowserWindow"],"mappings":"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"}